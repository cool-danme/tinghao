集合的特点：提供了一种存储空间可变的存储模型，，数据容量可随时发生改变。
          集合有单列集合（Collection），双列集合(Map)；单列集合又包括List（可重复）集合与Set(不可重复集合)
          注：这些集合都是接口，并不能直接创建对象并使用，所以只能通过实现类来创建对象。
          List下有，ArrayList、LinkedList等；
          Set下重点学习HashSet,TreeSet(学习的这些都是实现类，上一级都是接口)
          Map下主要学习HashMap
          先学习接口，再学习实现类
         
       
       
      Collection基本使用方法：
                            package tinghao03;

                            import java.util.ArrayList;
                            import java.util.Collection;

                            /*
                            * 创建Collection集合的对象
                            * 以多态的形式
                            * ArrayList
                            * */
                            public class CollectionDemo {
                                public static void main(String[] args) {
                                    //创建对象
                                    Collection<String> c=new ArrayList<String>();
                                    //添加元素boolean add(E,e);E就是C<String>里面的String
                                    c.add("java");
                                    c.add("hello");
                                    c.add("庭好");
                                    //输出集合对象
                                    System.out.println(c);
                                }
                            }
      Collection集合常用方法：
                                  package tinghao04;

                            import java.util.ArrayList;
                            import java.util.Collection;

                            public class CollectionDemo02 {
                                public static void main(String[] args) {
                                    //先创建对象
                                    Collection<String> c=new ArrayList<String>();//为什么都是true,ctrl+b,alt+7可以查看类的所有信息
                                    //使用boolean add(E,e)
                                    ///*System.out.println(c.add("hello"));//true
                                    //System.out.println(c.add("world"));//true
                                    //System.out.println(c.add("world"));//true*/
                                    //查看add方法发现永远返回true所以，直接用add
                                    c.add("hello");
                                    c.add("world");
                                    c.add("world");


                                    //remove(Object o)从此 collection 中移除指定元素的单个实例，如果存在的话（可选操作）。
                                   // System.out.println(c.remove("world"));//true
                                    //System.out.println(c.remove("javaee"));//false
                                    //void clear()移除此 collection 中的所有元素,因为是void所以直接调用
                                    //c.clear();//false []
                                    // boolean contains(Object o)如果此 collection 包含指定的元素，则返回 true。
                            //        System.out.println(c.contains("hello"));//true
                            //        System.out.println(c.contains("javaee"));//false
                            //        boolean isEmpty()如果此 collection 不包含元素，则返回 true。
                            //        System.out.println(c.isEmpty());//false,所以不为空，再把clear注释去掉试一下，结果为true；
                            //        int size()返回此 collection 中的元素数。
                                    System.out.println(c.size());//3
                                    //输出集合对象
                                    System.out.println(c);//[hello] [hello, world, world]
                                }
                            }
